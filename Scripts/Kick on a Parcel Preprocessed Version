#define menukick
#include "menukick.lsl"
// Kicker on a parcel
// Andrew Harcourt
// 2020

// Sub Menu
integer MenuPos; 
integer Lha ; 
list ButtonList;

// State Default

list AvPresent;
list ListName;
list ListNameSort;

string NameAvButton;

integer Index;
integer NbAv;

key id;

Menu()
{
    integer Last;
    list Buttons;
    integer All = llGetListLength(ButtonList);
    if(MenuPos >= 9)
    {
        Buttons += "    <----";
        if((All - MenuPos) > 11)
        {  
            Buttons += "    ---->";
        }
        else    
        {
            Last = TRUE;
        }            
    }    
    else if (All > MenuPos + 9)
    {
        if((All - MenuPos) > 11)  
        {
            Buttons += "    ---->";
        }
        else   
        {
            Last = TRUE;
        }            
    }
    else    
    {
        Last = TRUE;
    }
    if (All > 0)
    {
        integer B;
        integer Len = llGetListLength(Buttons);
         
        for(B = MenuPos + Len + Last - 1 ; (Len < 12)&&(B < All); ++B)
        {
            Buttons = Buttons + [llList2String(ButtonList,B)];
            Len = llGetListLength(Buttons);
        }
    }
    Lha = llListen(-12345,"","","");    
    llSetTimerEvent(30.0);
    llDialog(llGetOwner(),"Andrew Harcourt's Scripts 2020 \n",Buttons,-12345);
}

ResetList()
{
    AvPresent = [];
    ListName = [];
    ListNameSort = [];
}

GetAv()
{
    AvPresent = llGetAgentList(AGENT_LIST_PARCEL_OWNER , []);
    NbAv = llGetListLength(AvPresent);

    if (!NbAv)
    {
        llOwnerSay("No avatars found within the region!");
        return;
    }

    Index = 0;

    while (Index < NbAv)
    {
        //key Id = llList2Key(AvPresent, Index);
        //string TempName =llKey2Name(Id);
        //ListName += llKey2Name(llList2Key(AvPresent, Index));
        ButtonList += llKey2Name(llList2Key(AvPresent, Index));            
        ++Index;
    }
}

SortList()
{
    ListNameSort = llListSort(ListName,1,TRUE);
    Index = 0;
    while (Index < NbAv)
    {
        NameAvButton = llList2String(ListNameSort,Index);
        ButtonList += NameAvButton;
        ++Index;
    } 
}
default
{
    state_entry()
    {
        ResetList();

        GetAv();              
        
        //SortList();
                   
        llListenRemove(Lha);
        MenuPos = 0;
        Menu();
    }
    listen(integer channel, string name, key id, string Msg)
    {
        llListenRemove(Lha);
        llSetTimerEvent(30.0);
        if (~llSubStringIndex(Msg,"---->"))
        {
            MenuPos += 10;
            Menu();
        }
        else if (~llSubStringIndex(Msg,"<----"))
        {
            MenuPos -= 10;
            Menu();
        }
        else
        {    
            menukick(Msg);
            llMessageLinked(LINK_THIS,0,"Done",id);
        }
    }
    timer()
    {

        llSetTimerEvent(0.0);
        llListenRemove(Lha);
    }            

}

state Main_Server
{
    state_entry()
    {
        llMessageLinked(LINK_THIS,0,"Done",id);
    }
}
